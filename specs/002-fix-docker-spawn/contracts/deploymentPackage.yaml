openapi: 3.0.3
info:
  title: Deployment Package API
  description: API for generating and downloading agent deployment artifacts
  version: 1.0.0
  contact:
    name: Agent Builder Team

servers:
  - url: https://resolute-kudu-325.convex.cloud
    description: Convex Cloud API

tags:
  - name: Packages
    description: Deployment package generation and download

paths:
  /api/deploymentPackage/generatePackage:
    post:
      summary: Generate deployment package
      description: Creates downloadable ZIP with agent code, Dockerfile, requirements.txt, and AWS CDK scripts
      operationId: generatePackage
      tags:
        - Packages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - testId
              properties:
                testId:
                  type: string
                  description: Successfully completed test ID
                  example: "k08ei3l4n7o9p0q1r2s3t4u5"
                customization:
                  type: object
                  description: Optional package customizations
                  properties:
                    includeLocalTesting:
                      type: boolean
                      description: Include docker-compose.yml for local testing
                      default: true
                      example: true
                    cdkLanguage:
                      type: string
                      description: AWS CDK template language
                      enum: [python, typescript]
                      default: python
                      example: "python"
                    awsRegion:
                      type: string
                      description: Default AWS region in templates
                      default: "us-east-1"
                      example: "us-east-1"
                    includeMonitoring:
                      type: boolean
                      description: Include CloudWatch dashboard template
                      default: false
                      example: false
      responses:
        '200':
          description: Package generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  packageId:
                    type: string
                    description: Deployment package ID
                    example: "m20gk5n6p9q1r2s3t4u5v6w7"
                  downloadUrl:
                    type: string
                    format: uri
                    description: S3 pre-signed download URL (24h expiry)
                    example: "https://agent-deployments.s3.amazonaws.com/agent-deployment-j97dh2k3-1729800000.zip?X-Amz-Algorithm=..."
                  expiresAt:
                    type: integer
                    description: URL expiration timestamp (Unix ms)
                    example: 1729886400000
                  fileSize:
                    type: integer
                    description: Package size in bytes
                    example: 4857392
                  manifest:
                    type: array
                    description: List of files in package
                    items:
                      $ref: '#/components/schemas/PackageFile'
        '400':
          description: Invalid request (test not completed, already has package, etc.)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Test not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/deploymentPackage/getPackageById:
    get:
      summary: Get deployment package metadata
      description: Retrieve package details without downloading
      operationId: getPackageById
      tags:
        - Packages
      parameters:
        - name: packageId
          in: query
          required: true
          description: Deployment package ID
          schema:
            type: string
            example: "m20gk5n6p9q1r2s3t4u5v6w7"
      responses:
        '200':
          description: Package metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentPackage'
        '404':
          description: Package not found or expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/deploymentPackage/getUserPackages:
    get:
      summary: List user's deployment packages
      description: Retrieve all packages generated by authenticated user
      operationId: getUserPackages
      tags:
        - Packages
      parameters:
        - name: limit
          in: query
          description: Max number of results
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            example: 20
        - name: includeExpired
          in: query
          description: Include expired packages
          schema:
            type: boolean
            default: false
            example: false
      responses:
        '200':
          description: List of deployment packages
          content:
            application/json:
              schema:
                type: object
                properties:
                  packages:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeploymentPackage'
                  hasMore:
                    type: boolean
                    description: More results available
                    example: false

  /api/deploymentPackage/refreshDownloadUrl:
    post:
      summary: Refresh expired download URL
      description: Generate new pre-signed URL for existing package
      operationId: refreshDownloadUrl
      tags:
        - Packages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - packageId
              properties:
                packageId:
                  type: string
                  description: Deployment package ID
                  example: "m20gk5n6p9q1r2s3t4u5v6w7"
                expiryHours:
                  type: integer
                  description: Hours until new URL expires (max 24)
                  minimum: 1
                  maximum: 24
                  default: 24
                  example: 12
      responses:
        '200':
          description: New download URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  downloadUrl:
                    type: string
                    format: uri
                    description: New S3 pre-signed URL
                    example: "https://agent-deployments.s3.amazonaws.com/..."
                  expiresAt:
                    type: integer
                    description: New expiration timestamp (Unix ms)
                    example: 1729929600000
        '404':
          description: Package not found or S3 object deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/deploymentPackage/trackDownload:
    post:
      summary: Track package download
      description: Increment download counter (called automatically by UI)
      operationId: trackDownload
      tags:
        - Packages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - packageId
              properties:
                packageId:
                  type: string
                  description: Deployment package ID
                  example: "m20gk5n6p9q1r2s3t4u5v6w7"
      responses:
        '200':
          description: Download tracked
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  downloadCount:
                    type: integer
                    description: Total downloads for this package
                    example: 3

components:
  schemas:
    DeploymentPackage:
      type: object
      properties:
        _id:
          type: string
          description: Unique package ID
          example: "m20gk5n6p9q1r2s3t4u5v6w7"
        testId:
          type: string
          description: Source test execution
          example: "k08ei3l4n7o9p0q1r2s3t4u5"
        agentId:
          type: string
          description: Agent deployed
          example: "j97dh2k3m6n8p9q0r1s2t3u4"
        userId:
          type: string
          description: Package owner
          example: "i86cg1j2k5m7n8o9p0q1r2s3"
        packageName:
          type: string
          description: ZIP filename
          example: "agent-deployment-j97dh2k3-1729800000.zip"
        fileSize:
          type: integer
          description: Package size in bytes
          example: 4857392
        downloadUrl:
          type: string
          format: uri
          description: S3 pre-signed download URL
          example: "https://agent-deployments.s3.amazonaws.com/..."
        urlExpiresAt:
          type: integer
          description: URL expiration timestamp (Unix ms)
          example: 1729886400000
        expired:
          type: boolean
          description: Whether download URL has expired
          example: false
        files:
          type: array
          description: Manifest of files in ZIP
          items:
            $ref: '#/components/schemas/PackageFile'
        generatedAt:
          type: integer
          description: Package creation timestamp (Unix ms)
          example: 1729800023512
        downloadCount:
          type: integer
          description: Number of times downloaded
          example: 2
        lastDownloadedAt:
          type: integer
          nullable: true
          description: Last download timestamp (Unix ms)
          example: 1729850000000

    PackageFile:
      type: object
      properties:
        path:
          type: string
          description: Relative path in ZIP archive
          example: "agent.py"
        size:
          type: integer
          description: File size in bytes
          example: 8472
        checksum:
          type: string
          description: SHA256 hash
          example: "a3c5e7f9b2d4a6c8e0f2a4b6c8d0e2f4a6b8c0d2e4f6a8b0c2d4e6f8a0b2c4d6"
        description:
          type: string
          description: Human-readable file description
          example: "Generated agent code with @agent decorator"

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "Cannot generate package: test status must be COMPLETED"
        code:
          type: string
          description: Error code
          example: "INVALID_TEST_STATUS"

  securitySchemes:
    ConvexAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Convex authentication token from @convex-dev/auth

security:
  - ConvexAuth: []
