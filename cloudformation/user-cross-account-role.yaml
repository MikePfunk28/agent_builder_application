AWSTemplateFormatVersion: '2010-09-09'
Description: 'AgentBuilder Cross-Account Access Role - Deploy this in YOUR AWS account to allow AgentBuilder to deploy agents'

Parameters:
  AgentBuilderAccountId:
    Type: String
    Description: The AWS Account ID of AgentBuilder (provided by AgentBuilder)
    AllowedPattern: '[0-9]{12}'
  
  ExternalId:
    Type: String
    Description: Unique External ID for security (provided by AgentBuilder)
    MinLength: 8

Resources:
  AgentBuilderAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AgentBuilderCrossAccountAccess
      Description: Allows AgentBuilder to deploy and manage agents in your AWS account
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AgentBuilderAccountId}:root'
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                sts:ExternalId: !Ref ExternalId
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess
      Policies:
        - PolicyName: AgentBuilderECSAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:CreateCluster
                  - ecs:DescribeClusters
                  - ecs:RegisterTaskDefinition
                  - ecs:RunTask
                  - ecs:StopTask
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:CreateRepository
                  - ecr:PutImage
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: 'arn:aws:logs:*:*:log-group:/aws/ecs/agentbuilder-*'
              - Effect: Allow
                Action:
                  - s3:CreateBucket
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - 'arn:aws:s3:::agentbuilder-*'
                  - 'arn:aws:s3:::agentbuilder-*/*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt ECSTaskExecutionRole.Arn

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AgentBuilderECSTaskExecution
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AgentBuilderECSTask
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonBedrockFullAccess
      Policies:
        - PolicyName: AgentTaskAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: 'arn:aws:s3:::agentbuilder-*/*'
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:log-group:/aws/ecs/agentbuilder-*'

Outputs:
  RoleArn:
    Description: Copy this Role ARN and paste it into AgentBuilder
    Value: !GetAtt AgentBuilderAccessRole.Arn
    Export:
      Name: AgentBuilderCrossAccountRoleArn
  
  TaskExecutionRoleArn:
    Description: ECS Task Execution Role ARN
    Value: !GetAtt ECSTaskExecutionRole.Arn
  
  TaskRoleArn:
    Description: ECS Task Role ARN
    Value: !GetAtt ECSTaskRole.Arn
  
  Instructions:
    Description: Next steps
    Value: Copy the RoleArn above and paste it into AgentBuilder app under Settings > AWS Connection
