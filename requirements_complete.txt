# Core AgentCore and Strands Dependencies
bedrock-agentcore>=1.0.0
bedrock-agentcore-starter-toolkit>=1.0.0
strands-agents>=1.0.0
strands-agents-tools>=1.0.0

# AWS SDK and Services
boto3>=1.34.0
botocore>=1.34.0
aioboto3>=12.0.0
aiobotocore>=2.11.0

# Authentication and Security
pyjwt>=2.8.0
cryptography>=41.0.0
python-jose[cryptography]>=3.3.0
passlib[bcrypt]>=1.7.4
python-multipart>=0.0.6

# Web Framework and API
fastapi>=0.104.0
uvicorn[standard]>=0.24.0
starlette>=0.27.0
pydantic>=2.5.0
httpx>=0.25.0
requests>=2.31.0
aiohttp>=3.9.0

# Database and Caching
redis>=5.0.0
psycopg2-binary>=2.9.7
sqlalchemy>=2.0.0
alembic>=1.12.0
asyncpg>=0.29.0

# Docker Integration
docker>=6.1.0
docker-compose>=1.29.0

# Ollama Integration
ollama>=0.1.0
openai>=1.3.0  # For OpenAI-compatible API
anthropic>=0.7.0  # For Anthropic models

# LangChain Integration (for additional tools)
langchain>=0.1.0
langchain-community>=0.0.10
langchain-aws>=0.1.0
langchain-openai>=0.0.5
langchain-anthropic>=0.1.0

# Vector Databases and Embeddings
chromadb>=0.4.0
faiss-cpu>=1.7.4
pinecone-client>=2.2.4
weaviate-client>=3.25.0
sentence-transformers>=2.2.2
tiktoken>=0.5.0

# Data Processing and Analysis
pandas>=2.1.0
numpy>=1.24.0
scipy>=1.11.0
scikit-learn>=1.3.0
matplotlib>=3.7.0
seaborn>=0.12.0
plotly>=5.17.0

# Text Processing and NLP
nltk>=3.8.1
spacy>=3.7.0
transformers>=4.35.0
torch>=2.1.0
tokenizers>=0.15.0

# File Processing
pypdf2>=3.0.1
python-docx>=0.8.11
openpyxl>=3.1.2
pillow>=10.0.0
python-magic>=0.4.27

# Web Scraping and APIs
beautifulsoup4>=4.12.0
scrapy>=2.11.0
selenium>=4.15.0
playwright>=1.40.0

# Monitoring and Observability
opentelemetry-api>=1.21.0
opentelemetry-sdk>=1.21.0
opentelemetry-instrumentation>=0.42b0
opentelemetry-exporter-otlp>=1.21.0
opentelemetry-instrumentation-requests>=0.42b0
opentelemetry-instrumentation-boto3sqs>=0.42b0
prometheus-client>=0.19.0

# Logging and Configuration
structlog>=23.2.0
python-dotenv>=1.0.0
pyyaml>=6.0.1
toml>=0.10.2
click>=8.1.0

# Async and Concurrency
asyncio>=3.4.3
aiofiles>=23.2.1
celery>=5.3.0
redis>=5.0.0

# Testing and Development
pytest>=7.4.0
pytest-asyncio>=0.21.0
pytest-mock>=3.12.0
pytest-cov>=4.1.0
black>=23.9.0
flake8>=6.1.0
mypy>=1.6.0
pre-commit>=3.5.0

# Jupyter and Interactive Development
jupyter>=1.0.0
ipython>=8.16.0
notebook>=7.0.0

# Time and Date Handling
python-dateutil>=2.8.2
pytz>=2023.3
arrow>=1.3.0

# JSON and Data Serialization
orjson>=3.9.0
msgpack>=1.0.7

# HTTP and Networking
urllib3>=2.0.0
certifi>=2023.7.22
websockets>=12.0

# Environment and System
psutil>=5.9.0
python-multipart>=0.0.6

# Image Processing (for vision models)
opencv-python>=4.8.0
imageio>=2.31.0

# Audio Processing (for audio models)
librosa>=0.10.0
soundfile>=0.12.0
pydub>=0.25.0

# Video Processing
moviepy>=1.0.3

# Geographic and Location
geopy>=2.4.0
folium>=0.15.0

# Financial and Market Data
yfinance>=0.2.0
alpha-vantage>=2.3.1

# Social Media APIs
tweepy>=4.14.0
python-telegram-bot>=20.6

# Email and Communication
smtplib2>=0.2.1
imaplib2>=3.6

# Workflow and Task Management
prefect>=2.14.0
airflow>=2.7.0

# Model Serving and Deployment
gradio>=4.0.0
streamlit>=1.28.0

# Additional Utilities
tqdm>=4.66.0
rich>=13.6.0
typer>=0.9.0
jinja2>=3.1.0
markupsafe>=2.1.0

# Memory and Performance
memory-profiler>=0.61.0
line-profiler>=4.1.0

# Configuration Management
hydra-core>=1.3.0
omegaconf>=2.3.0

# API Documentation
sphinx>=7.2.0
sphinx-rtd-theme>=1.3.0

# Security Scanning
bandit>=1.7.5
safety>=2.3.0

# Code Quality
isort>=5.12.0
autopep8>=2.0.0

# Additional AWS Services
aws-lambda-powertools>=2.25.0
aws-xray-sdk>=2.12.0

# GraphQL (if needed)
graphene>=3.3.0
strawberry-graphql>=0.213.0

# Message Queues
pika>=1.3.0  # RabbitMQ
kafka-python>=2.0.2

# Search and Indexing
elasticsearch>=8.10.0
opensearch-py>=2.4.0

# Blockchain and Web3 (if needed)
web3>=6.11.0
eth-account>=0.9.0

# Additional ML Libraries
xgboost>=2.0.0
lightgbm>=4.1.0
catboost>=1.2.0

# Time Series Analysis
statsmodels>=0.14.0
prophet>=1.1.0

# Graph Processing
networkx>=3.2.0
igraph>=0.10.0

# Geospatial Analysis
geopandas>=0.14.0
shapely>=2.0.0

# Additional Data Sources
sqlalchemy-utils>=0.41.0
datasets>=2.14.0  # HuggingFace datasets

# Development Tools
ipdb>=0.13.0
pdbpp>=0.10.0

# Additional Authentication
authlib>=1.2.0
python-oauth2>=1.1.0

# Additional Serialization
pickle5>=0.0.12
dill>=0.3.7

# Additional HTTP Clients
grpcio>=1.59.0
grpcio-tools>=1.59.0

# Additional Async Libraries
trio>=0.23.0
anyio>=4.0.0

# Additional Configuration
configparser>=6.0.0
argparse>=1.4.0

# Additional Validation
marshmallow>=3.20.0
cerberus>=1.3.0

# Additional Caching
diskcache>=5.6.0
joblib>=1.3.0

# Additional Compression
lz4>=4.3.0
zstandard>=0.22.0

# Additional Parsing
lxml>=4.9.0
xmltodict>=0.13.0

# Additional Networking
paramiko>=3.3.0
fabric>=3.2.0

# Additional Monitoring
sentry-sdk>=1.38.0
newrelic>=9.2.0

# Additional Development
watchdog>=3.0.0
python-decouple>=3.8

"""
Installation Instructions:

# Create virtual environment
python3 -m venv .venv
source .venv/bin/activate  # On Windows: .venv\Scripts\activate

# Install all dependencies
pip install -r requirements.txt

# For development, also install:
pip install -e .

# If you encounter any conflicts, use:
pip install --upgrade --force-reinstall -r requirements.txt

Run in CloudShell
Optional System Dependencies (install via system package manager):

# Ubuntu/Debian
sudo apt-get update
sudo apt-get install -y \
    build-essential \
    python3-dev \
    libpq-dev \
    libmagic1 \
    ffmpeg \
    libsm6 \
    libxext6 \
    libfontconfig1 \
    libxrender1 \
    libgl1-mesa-glx

# macOS (with Homebrew)
brew install postgresql libmagic ffmpeg

# For Ollama
curl -fsSL https://ollama.ai/install.sh | sh

Run in CloudShell
Docker Requirements (if using Docker):

# Add to your Dockerfile
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    libmagic1 \
    ffmpeg \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Ollama (if needed)
RUN curl -fsSL https://ollama.ai/install.sh | sh

# Copy and install Python requirements
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

Environment Variables Needed:

# Create .env file
cat > .env << 'EOF'
# AWS Configuration
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your_access_key
AWS_SECRET_ACCESS_KEY=your_secret_key

# AgentCore Configuration
AGENTCORE_REGION=us-east-1

# Ollama Configuration
OLLAMA_BASE_URL=http://localhost:11434

# Database Configuration
DATABASE_URL=postgresql://user:password@localhost/dbname
REDIS_URL=redis://localhost:6379

# Authentication
JWT_SECRET_KEY=your_jwt_secret
COGNITO_USER_POOL_ID=your_pool_id
COGNITO_CLIENT_ID=your_client_id

# API Keys
OPENAI_API_KEY=your_openai_key
ANTHROPIC_API_KEY=your_anthropic_key
EOF
"""